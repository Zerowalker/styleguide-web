a {
    color: $palette-gray-4;
    text-decoration: none;

    // Color theme styles
    @if ($includeThemes == true) {
        @each $theme, $color in $themes {
            .theme-#{$theme} & {
                color: map-get($color, fourth);
            }
        }
    }

    &:hover,
    &:focus {
        text-decoration: underline;
    }
}

.mce-content-body a:not([class]),
[class*="theme-"] article a:not([class]),
[class*="theme-"] article a.link-item {
    color: $palette-blue-2;
    text-decoration: underline;

    &:hover{
        color: $palette-blue-5;
    }

    &:visited {
        color: $palette-purple-2;

        &:hover {
            color: $palette-purple-5;
        }
    }
}

a.link-box,
.link-box a {
    display: block;
    position: relative;
    background-color: $palette-gray-2;
    padding: 5px 10px 5px 15px;
    border-radius: 3px;
    overflow: hidden;
    color: #fff;
    transition: 100ms all;

    &::before {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        width: 5px;
        background-color: $palette-gray-1;
        transition: 100ms all;
    }

    // Color theme styles
    @if ($includeThemes == true) {
        @each $theme, $color in $themes {
            .theme-#{$theme} & {
                background-color: map-get($color, second);

                &::before {
                    background-color: map-get($color, third);
                }
            }
        }
    }

    &:hover {
        padding-left: 18px;

        &::before {
            width: 8px;
        }
    }
}

a.link-box:nth-of-type(2),
.link-box:nth-of-type(2) a {
    background-color: $palette-gray-4;

    &::before {
        background-color: $palette-gray-5;
    }

    // Color theme styles
    @if ($includeThemes == true) {
        @each $theme, $color in $themes {
            .theme-#{$theme} & {
                background-color: map-get($color, fourth);

                &::before {
                    background-color: map-get($color, fifth);
                }
            }
        }
    }
}

a.link-box:nth-of-type(3),
.link-box:nth-of-type(3) a {
    background-color: $palette-gray-5;

    &::before {
        background-color: $palette-gray-2;
    }

    // Color theme styles
    @if ($includeThemes == true) {
        @each $theme, $color in $themes {
            .theme-#{$theme} & {
                background-color: map-get($color, fifth);

                &::before {
                    background-color: map-get($color, second);
                }
            }
        }
    }
}

a.link-box:nth-of-type(4),
.link-box:nth-of-type(4) a {
    background-color: $palette-gray-3;

    &::before {
        background-color: $palette-gray-1;
    }

    // Color theme styles
    @if ($includeThemes == true) {
        @each $theme, $color in $themes {
            .theme-#{$theme} & {
                background-color: map-get($color, third);

                &::before {
                    background-color: map-get($color, first);
                }
            }
        }
    }
}

.link-box + .link-box {
    margin-top: 5px;
}
