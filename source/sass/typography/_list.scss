//
// @name Unordered list
// @description Stanrdard unordered list.
//
// @state .unordered-list - Applies the style to lists used outside <code>article</code>. There's no need to apply this class when using <code>ul</code> inside an <code>article</code>
//
// @page Typography/Unordered list
//
// @markup
// <ul class="unordered-list">
//     <li>Cupcake</li>
//     <li>Brownie</li>
//     <li>Gingerbread</li>
// </ul>
//

.modularity-mod-text .box-content ul,
.mce-content-body ul,
article ul:not(.nav):not(.slider-items):not(.line-numbers),
.unordered-list {
    padding-left: $content-gutter * 2;

    li {
        position: relative;

        & + li {
            margin-top: 5px;
        }

        &::before {
            position: absolute;
            left: -20px;
            top: .55em;
            content: '';
            width: 6px;
            height: 6px;
            background-color: $palette-gray-3;

            // Color theme styles
            @if ($includeThemes == true) {
                @each $theme, $color in $themes {
                    .theme-#{$theme} & {
                        background-color: map-get($color, third);
                    }
                }
            }
        }
    }
}

ul li::before {
    // Color theme styles
    @if ($includeThemes == true) {
        @each $theme, $color in $themes {
            .mce-content-body.theme-#{$theme} & {
                background-color: map-get($color, third);
            }
        }
    }
}

.modularity-mod-text .box-filled .box-content ul li::before {
    background-color: #fff !important;
}

article + ul,
article ul + ul,
.unordered-list + .unordered-list {
    margin-top: $content-gutter;
}

//
// @name Ordered list
// @description Stanrdard ordered list.
//
// @page Typography/Ordered list
//
// @markup
// <ol class="ordered-list">
//     <li>Cupcake</li>
//     <li>Brownie</li>
//     <li>Gingerbread</li>
// </ol>
//

.mce-content-body ol,
article ol,
.ordered-list {
    padding-left: $content-gutter * 2;
    list-style-type: decimal;
}

li.title {
    font-size: .8em;
    font-weight: bold;
    color: $palette-gray-2;
    letter-spacing: .5px;

    @if ($includeThemes == true) {
        @each $theme, $color in $themes {
            .theme-#{$theme} & {
                color: map-get($color, secondSafe);
            }
        }
    }
}

li + li.title {
    margin-top: 10px;
}

.list-item-spacing li + li {
    margin-top: 8px;
}
