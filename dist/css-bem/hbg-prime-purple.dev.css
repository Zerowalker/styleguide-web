@charset "UTF-8";
/* ==========================================================================

    Bootstrap.scss

    Included layers/folders with description:

    - Settings      – used with preprocessors and contain font, colors definitions, etc.
    - Tools         – globally used mixins and functions. It’s important not to output any CSS in the first 2 layers.
    - Generic       – reset and/or normalize styles, box-sizing definition, etc. This is the first layer which generates actual CSS.
    - Elements      – styling for bare HTML elements (like H1, A, etc.). These come with default styling from the browser so we can redefine them here.
    - Objects       – class-based selectors which define undecorated design patterns, for example media object known from OOCSS
    - Components    – specific UI components. This is where majority of our work takes place and our UI components are often composed of Objects and Components
    - Utilities     – utilities and helper classes with ability to override anything which goes before in the triangle, eg. hide helper class

    Inspiration: https://www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/

   ========================================================================== */
/* Settings */
/* A wrapper aware breakpoint */
/*
 *  Generates directional classes (eg. margin-left, margin-right, margin-top), mainly used for utility classes
 *
 *  @param $map sass-map - Styles to include, keys will define the size (which will be used as className) and the value defines the propety value (eg. (0: 0px, 1: 1rem, 2: 2rem))
 *  @param $propety string - Style propety (eg. margin, padding, border or other directional (left, right, top, bottom) style)
 *  @param $className string - Class name that will be combined with the direction, eg. className 'm' will generate m, mx (top & bot), my (left & right), ml (left), mr (right), mt, mb
 *  @param $breakpoints list - List of breakpoints to loop through (eg. $list: xs, md, lg; will generate classes for each breakpoint (adding @breakpoint suffix)), defaults to all breakpoints
 *  @param $important boolean - Will add !important to each style if set to true
 *  @param $nameSpace string - Namesapce to prefix each class with - Defaults to 'u' (utility)
 *
 *
 * @example
 *
 *  $style-map: (
 *     0: 0,
 *     2: 2rem
 *  );
 *  @include directionalClasses($style-map, margin, 'm');
 *
 */
/* line 1, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/objects/_box.scss */
.o-box {
  background: #fff; }
  /* line 42, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass/tools/mixins/_material.scss */
  body:not(.material-no-radius) .o-box {
    border-radius: 2px; }
  /* line 2, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass/tools/mixins/_material.scss */
  body:not(.material-no-shadow) .o-box {
    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.08); }
    @media print {
      /* line 2, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass/tools/mixins/_material.scss */
      body:not(.material-no-shadow) .o-box {
        box-shadow: none; } }

/* line 1, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/objects/_reset.scss */

.o-reset-button {
  background: none;
  border: none;
  font: inherit;
  color: inherit;
  padding: 0; }

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
/* line 3, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/_base.scss */
.hamburger {
  padding: 0 0;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible; }
  /* line 21, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/_base.scss */
  .hamburger:hover {
    opacity: 0.7; }

/* line 31, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/_base.scss */
.hamburger-box {
  width: 25px;
  height: 15px;
  display: inline-block;
  position: relative; }

/* line 38, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/_base.scss */
.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -1.5px; }
  /* line 43, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/_base.scss */
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
    width: 25px;
    height: 3px;
    background-color: #000;
    border-radius: 4px;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease; }
  /* line 56, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/_base.scss */
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  /* line 62, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/_base.scss */
  .hamburger-inner::before {
    top: -6px; }
  /* line 66, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/_base.scss */
  .hamburger-inner::after {
    bottom: -6px; }

/*
   * Slider
   */
/* line 6, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider.scss */
.hamburger--slider .hamburger-inner {
  top: 1.5px; }
  /* line 9, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider.scss */
  .hamburger--slider .hamburger-inner::before {
    top: 6px;
    transition-property: transform, opacity;
    transition-timing-function: ease;
    transition-duration: 0.15s; }
  /* line 16, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider.scss */
  .hamburger--slider .hamburger-inner::after {
    top: 12px; }

/* line 22, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider.scss */
.hamburger--slider.is-active .hamburger-inner {
  transform: translate3d(0, 6px, 0) rotate(45deg); }
  /* line 27, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider.scss */
  .hamburger--slider.is-active .hamburger-inner::before {
    transform: rotate(-45deg) translate3d(-3.57143px, -3px, 0);
    opacity: 0; }
  /* line 32, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider.scss */
  .hamburger--slider.is-active .hamburger-inner::after {
    transform: translate3d(0, -12px, 0) rotate(-90deg); }

/*
   * Slider Reverse
   */
/* line 6, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider-r.scss */
.hamburger--slider-r .hamburger-inner {
  top: 1.5px; }
  /* line 9, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider-r.scss */
  .hamburger--slider-r .hamburger-inner::before {
    top: 6px;
    transition-property: transform, opacity;
    transition-timing-function: ease;
    transition-duration: 0.15s; }
  /* line 16, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider-r.scss */
  .hamburger--slider-r .hamburger-inner::after {
    top: 12px; }

/* line 22, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider-r.scss */
.hamburger--slider-r.is-active .hamburger-inner {
  transform: translate3d(0, 6px, 0) rotate(-45deg); }
  /* line 27, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider-r.scss */
  .hamburger--slider-r.is-active .hamburger-inner::before {
    transform: rotate(45deg) translate3d(3.57143px, -3px, 0);
    opacity: 0; }
  /* line 32, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/node_modules/hamburgers/_sass/hamburgers/types/_slider-r.scss */
  .hamburger--slider-r.is-active .hamburger-inner::after {
    transform: translate3d(0, -12px, 0) rotate(90deg); }

/* line 1, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-brand.scss */
.c-brand img,
img.c-brand {
  height: auto;
  max-width: 100%;
  display: block; }

/* line 8, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-brand.scss */
.c-brand svg {
  width: 100%;
  height: auto;
  display: block; }

/* line 1, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-footer.scss */
.c-footer {
  padding: 64px 0; }

/* line 5, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-footer.scss */
.c-footer.c-footer--sm {
  padding: 32px 0; }

/* line 9, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-footer.scss */
.c-footer.c-footer--lg {
  padding: 128px 0; }

/* line 13, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-footer.scss */
.c-footer.c-footer--xl {
  padding: 192px 0; }

/* line 1, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
.c-nav {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  /* TEMP */ }
  /* line 9, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
  .c-nav .c-nav__item {
    position: relative; }
    /* line 11, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
    .c-nav .c-nav__item a {
      display: block;
      padding: 16px; }
  /* line 19, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
  .c-nav .c-nav__item.is-current:after,
  .c-nav .c-nav__item.is-current-ancestor:not(.c-navbar__sub):after {
    bottom: 0;
    left: 50%;
    border: solid transparent;
    content: "";
    position: absolute;
    pointer-events: none;
    border-color: rgba(255, 255, 255, 0);
    border-bottom-color: #fff;
    border-width: 8px;
    transform: translate(-50%, 0); }
  /* line 37, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
  .c-nav .c-nav__sub {
    display: none; }
  /* line 41, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
  .c-nav .c-nav__item.is-open .c-nav__sub {
    display: block; }
  /* line 45, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
  .c-nav .c-nav__item:hover {
    cursor: pointer; }

/* line 52, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
.c-nav.c-nav--small {
  font-size: 14px; }
  /* line 54, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
  .c-nav.c-nav--small .c-nav__link {
    padding: 8px; }

/* line 59, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-nav.scss */
.c-nav.c-nav--large {
  font-size: 19px; }

/* line 3, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-navbar.scss */
body:not(.s-bem-deprecated) .c-navbar .c-navbar__body {
  display: flex;
  flex-wrap: no-wrap;
  align-items: center; }

/* line 9, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-navbar.scss */
body:not(.s-bem-deprecated) .c-navbar {
  padding: 16px 0; }

/* line 13, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-navbar.scss */
body:not(.s-bem-deprecated) .c-navbar.c-navbar--hard {
  padding: 0 0; }

@media screen and (min-width: 60em) {
  /* line 17, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_c-navbar.scss */
  body:not(.s-bem-deprecated) .c-navbar.c-navbar--lg {
    padding: 32px 0; } }

/* line 2, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_feed.scss */
.c-feed .c-feed__header {
  position: relative; }

/* line 6, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_feed.scss */
.c-feed:hover .c-feed__title {
  color: #7b075e; }

/* line 12, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_feed.scss */
.c-feed.c-feed--rss .c-feed__source:before {
  content: '-'; }

/* line 1, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_hamburger.scss */
.hamburger {
  vertical-align: initial !important;
  display: flex;
  padding: 16px;
  line-height: 1; }
  /* line 7, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_hamburger.scss */
  .hamburger span.hamburger-label {
    margin-left: 8px; }

/* line 3, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
.s-bem-deprecated .c-header__row {
  display: flex;
  flex-wrap: no-wrap;
  align-items: center;
  padding: 16px 16px; }

/* line 10, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
.s-bem-deprecated .c-header__item {
  display: flex;
  flex-wrap: no-wrap;
  align-items: center;
  flex-grow: 1; }
  /* line 16, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
  .s-bem-deprecated .c-header__item.c-header__item--left {
    justify-content: flex-start; }
  /* line 20, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
  .s-bem-deprecated .c-header__item.c-header__item--right {
    justify-content: flex-end; }
  /* line 24, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
  .s-bem-deprecated .c-header__item.c-header__item--center {
    justify-content: center; }

/* line 29, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
.s-bem-deprecated .c-header__item:not(:last-child) {
  margin-right: 32px; }

/* line 35, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
.s-bem-deprecated .c-header__logo h1 {
  padding-bottom: 0; }

/* line 39, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
.s-bem-deprecated .c-header__logo a {
  display: block; }

/* line 43, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
.s-bem-deprecated .c-header__logo img,
.s-bem-deprecated .c-header__logo svg {
  height: auto;
  width: 100%;
  max-width: 18rem;
  display: block; }

/* line 53, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
.s-bem-deprecated .c-header--primary .c-header__row {
  padding: 16px 16px; }
  @media all and (min-width: 29.3125em) {
    /* line 53, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
    .s-bem-deprecated .c-header--primary .c-header__row {
      padding: 32px 16px; } }

/* line 62, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
.s-bem-deprecated .c-header--top {
  font-size: 80%;
  line-height: 1; }
  /* line 63, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
  .s-bem-deprecated .c-header--top .c-header__row {
    padding: 12px 16px; }
  /* line 69, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_header.scss */
  .s-bem-deprecated .c-header--top a.pricon:before {
    vertical-align: top; }

/* line 2, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_navbar.scss */
.s-bem-deprecated .c-navbar {
  display: flex;
  flex-wrap: no-wrap;
  align-items: center;
  /* TEMP */
  margin: -16px; }
  /* line 10, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_navbar.scss */
  .s-bem-deprecated .c-navbar .c-navbar__item {
    position: relative; }
    /* line 12, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_navbar.scss */
    .s-bem-deprecated .c-navbar .c-navbar__item a {
      display: block;
      padding: 16px; }
  /* line 20, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_navbar.scss */
  .s-bem-deprecated .c-navbar .c-navbar__item.is-current:after,
  .s-bem-deprecated .c-navbar .c-navbar__item.is-current-ancestor:not(.c-navbar__sub):after {
    bottom: 0;
    left: 50%;
    border: solid transparent;
    content: "";
    position: absolute;
    pointer-events: none;
    border-color: rgba(255, 255, 255, 0);
    border-bottom-color: #fff;
    border-width: 8px;
    transform: translate(-50%, 0); }
  /* line 38, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_navbar.scss */
  .s-bem-deprecated .c-navbar .c-navbar__sub {
    display: none; }
  /* line 42, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_navbar.scss */
  .s-bem-deprecated .c-navbar .c-navbar__item.is-open .c-navbar__sub {
    display: block; }
  /* line 46, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_navbar.scss */
  .s-bem-deprecated .c-navbar .c-navbar__item_button:hover {
    cursor: pointer; }

/* line 1, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_posts.scss */
.c-posts {
  margin-top: 48px; }
  /* line 3, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/components/_posts.scss */
  .c-posts .c-posts__item {
    margin-bottom: 48px; }

/* line 1, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_align.scss */
.u-align-baseline {
  vertical-align: baseline !important; }

/* line 2, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_align.scss */
.u-align-top {
  vertical-align: top !important; }

/* line 3, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_align.scss */
.u-align-middle {
  vertical-align: middle !important; }

/* line 4, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_align.scss */
.u-align-bottom {
  vertical-align: bottom !important; }

/* line 5, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_align.scss */
.u-align-text-bottom {
  vertical-align: text-bottom !important; }

/* line 6, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_align.scss */
.u-align-text-top {
  vertical-align: text-top !important; }

/* line 15, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass/tools/mixins/_mixins.scss */
.u-clearfix::after {
  content: "";
  display: table;
  clear: both; }

/* line 2, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_spacing.scss */
.u-content-spacing > * + *:not(.u-content-spacing__ignore) {
  margin-top: 16px; }

/* Text decoration */
/* line 2, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-no-decoration,
.u-no-decoration:hover,
.u-no-decoration:focus {
  text-decoration: none; }

/* line 8, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-inherit-color {
  color: inherit; }

/* Text appearance */
/* line 13, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-bold,
.u-strong {
  font-weight: bold; }

/* line 18, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-italic {
  font-style: italic; }

/* Text flow */
/* line 23, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-nowrap {
  white-space: nowrap; }

/* line 27, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }

/* line 33, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-truncate-ignore-hover:hover {
  background-color: #fff;
  width: auto;
  overflow: visible; }

/* Text size */
/* line 40, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-text-small {
  font-size: 80%; }

/* line 44, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-text-normal {
  font-size: 100%; }

/* line 48, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-text-large {
  font-size: 110%; }

/* line 52, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-text-xlarge {
  font-size: 120%; }

/* Apperance */
/* line 57, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-text-uppercase {
  text-transform: uppercase; }

/* line 61, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-text-lowercase {
  text-transform: lowercase; }

/* line 65, /Users/Nikolas/Web/Local/vagrant-hbg/public/hbgprime.local/source/sass-bem/utilities/_text.scss */
.u-text-capitalize {
  text-transform: capitalize; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
